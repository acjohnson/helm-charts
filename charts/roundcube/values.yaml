---
# Default values
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

### Namespace to deploy Roundcube
# The namespace to use to deploy the roundcube components, if left empty
# will default to .Release.Namespace (aka helm --namespace).
namespace: "roundcube"
namespaceCreate: false

## Components
##
## Control what components of Roundcube to deploy for the cluster
components:
  # roundcube
  roundcube: true
  # database
  database: true

## Images
##
## Control what images to use for each component
images:
  roundcube:
    repository: registry.thejohnsons.site/debianbased
    tag: roundcube
    pullPolicy: IfNotPresent
  database:
    repository: mariadb
    tag: 10.5.8
    pullPolicy: IfNotPresent

# Set the timezone of the roundcube server
timezone: "UTC"

# add your pod network subnet to the `List of IP addresses and networks that are allowed without auth`
# This will override the manual settings, so only use this if you will not need to change it manually.
# This list will be automatically converted to a command seperated string when passed to the container.
# You would specify this when using helm CLI with --set allowedNetworks="{127.0.0.1,10.54.2.0/24}"
# allowedNetworks:
#   -   127.0.0.1
#   -   10.54.2.0/24

# Override public http port
# Default is 80
publicHttpPort: 80

# Override public https port
# Default is 443
publicHttpsPort: 443

# Override http port
# Use 9000 if using the roundcube fpm image
# Default is 80
httpPort: 80

# Override https port
# Default is 443
httpsPort: 443

# Tell PHP that it should work as under secure connection
# even if it doesn't recognize it as secure ($_SERVER['HTTPS'] is not set)
# e.g. when you're running Roundcube behind a https proxy
# this option is mutually exclusive to 'force_https' and only either one of them should be set to true.
# Default is false
useHttps: false

# Enforce connections over https
# With this option enabled, all non-secure connections will be redirected.
# It can be also a port number, hostname or hostname:port if they are
# different than default HTTP_HOST:443
# Default is ""
forceHttps: ""

# Hostname of the IMAP server to connect to, use tls:// prefix for STARTTLS
# Default is "ssl://localhost"
defaultHost: "ssl://localhost"

# IMAP port number
# Default is 993
defaultPort: 993

# Hostname of the SMTP server to send mails, use tls:// prefix for STARTTLS
# Default is "tls://localhost"
smtpServer: "tls://localhost"

# SMTP port number
# Default is 587
smtpPort: 587

# List of built-in plugins to activate
# Default is "archive,zipdownload,password"
plugins: "archive,zipdownload,password"

# Configures the default theme
# Default is "elastic"
skin: "elastic"

# File upload size limit
# Default is "50M"
uploadMaxFilesize: "50M"

# DES key used to encrypt the users imap password which is stored
# in the session record (and the client cookie if remember password is enabled).
# please provide a string of exactly 24 chars.
# Default is "abcdefghijklmnopqrstuvwx"
desKey: "abcdefghijklmnopqrstuvwx"

# A base64ed Diffie-Hellman parameter
# Mount a secret that contains a base64 encoded customized copy of config.inc.php
# You'll pretty much for sure want to use this...
customConfigIncPhp: 

# Database provider
# Currently supported: mysql, pgsql, sqlite
# Default is mysql
dbType: mysql

# The database name for Roundcube to use
# Default is "roundcubemail"
dbName: "roundcubemail"

# Set the database username
# Default is roundcube
dbUsername: roundcube

# Set the database password (if pgsql dbRootPassword is used instead)
# Default is changeme
dbPassword: changeme

# Set the database root or superuser password
# Default is changeme
dbRootPassword: changeme

# Set the title of the Roundcube site
# Default is "Roundcube Webmail"
productName: "Roundcube Webmail"

# Enable the Roundcube installer
# Default is false
enableInstaller: false

# Enable Roundcube Spellcheck
# Default is true
enableSpellcheck: true

# Enables spellchecker exceptions dictionary
# Setting it to 'shared' will make the dictionary shared by all users
# Default is false
spellcheckDictionary: false

# Set the spell checking engine. Possible values:
# - 'googie'  - the default (also used for connecting to Nox Spell Server, see 'spellcheck_uri' setting)
# - 'pspell'  - requires the PHP Pspell module and aspell installed
# - 'enchant' - requires the PHP Enchant module
# - 'atd'     - install your own After the Deadline server or check with the people at http://www.afterthedeadline.com before using their API
# Since Google shut down their public spell checking service, the default settings
# connect to http://spell.roundcube.net which is a hosted service provided by Roundcube.
# You can connect to any other googie-compliant service by setting 'spellcheck_uri' accordingly.
# Default is "googie"
spellcheckEngine: "googie"

# For locally installed Nox Spell Server or After the Deadline services
# Default is ""
spellcheckUri: ""

# Roundcube log driver:  'syslog', 'stdout' or 'file'
# Default is stdout
logDriver: "stdout"

# You can add as many Additional ENV variables here
# The following is the same as --set extraEnv.FOO="bar"
# extraEnv:
#   FOO: "bar"

# upgrade strategy type (e.g. Recreate or RollingUpdate)
strategyType: Recreate

imagePullSecrets: []
# name: regcred
nameOverride: ""
fullnameOverride: ""

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

hostNetwork: false

## Roundcube
## templates/roundcube-deployment.yaml
##
roundcube:
  component: roundcube
  # Increasing the replicaCount for roundcube requires a ReadWriteMany PVC
  # in order for Roundcube to function properly and have access to the same content on all pods
  replicaCount: 1
  # True includes annotation for deployment that contains hash of corresponding configmap, which will cause pods to restart on configmap change
  restartPodsOnConfigMapChange: false
  # nodeSelector:
  # cloud.google.com/gke-nodepool: default-pool

  podSecurityContext: {}
  # podSecurityContext:
  #   runAsUser: 568
  #   runAsGroup: 568
  #   fsGroup: 568

  ## roundcube service
  ## templates/roundcube-service.yaml
  service:
    type: ClusterIP
    defaultProtocol: "http"
    ports:
      # Use 9000 if using the roundcube fpm image
      http: 80
      https: 443
    annotations: {}
    # metallb.universe.tf/allow-shared-ip: roundcube-svc
    labels: {}
    ## Use loadBalancerIP to request a specific static IP,
    ## otherwise leave blank
    ##
    loadBalancerIP:
    # loadBalancerSourceRanges: []
    ## Set the externalTrafficPolicy in the Service to either Cluster or Local
    # externalTrafficPolicy: Cluster

  ## roundcube ingress
  ## templates/roundcube-ingress.yaml
  ##
  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    path: /
    hosts:
      - chart-example.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  ## roundcube volumes
  persistence:
    data:
      # We want to enable a data pvc (use for sqlite database perhaps)
      enabled: false
      # Optionally specify claimName to manually override the PVC to be used for
      # the datac directory. If claimName is specified, storageClass and size are
      # ignored.
      ## claimName: "roundcube-data-pvc"
      # Optionally specify a storage class to be used for the data directory.
      # If not specified and claimName is not specified, the default storage
      # class will be used.
      storageClass: ""
      # subPath: some-subpath
      # The requested size of the volume to be used when creating a
      # PersistentVolumeClaim.
      size: 20Gi
      # Access mode for this volume
      accessMode: ReadWriteOnce

    extraMounts: []
    ## Include additional claims that can be mounted inside the
    ## pod. This is useful if you wish to use different paths with categories
    ## Claim will me mounted as /{mountPath} if specified. If no {mountPath} is given,
    ## mountPath will default to {name}
    # - name: more-data
    #   # if claimName is specified the a new volume will mounted, if omitted the mount will be considered to be associated with one of the standard volumes (e.g data).
    #   # This useful to mount data to a different subPath
    #   claimName: optional-claim
    #   mountPath: /mnt/path/in/pod
    #   subPath: optional/sub/path
    #
    ## Example using an existing NFS filer directly. Below the 'volume' key all volume types are allowed (eg. nfs, iscsi, hostPath).
    ## See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#volume-v1-core for further information
    # - name: example2
    #   mountPath: mnt/example2
    #   volume:
    #     nfs:
    #       server: <nfs server fqdn or ip>
    #       path: <nfs export path>
    #       readOnly: true

  # Probes configuration
  probes:
    liveness:
      enabled: true
      failureThreshold: 10
      initialDelaySeconds: 30
      periodSeconds: 60
    readiness:
      enabled: false
      failureThreshold: 10
      initialDelaySeconds: 30
      periodSeconds: 60
    startup:
      enabled: false
      failureThreshold: 30
      initialDelaySeconds: 60
      periodSeconds: 60

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  tolerations: []
  affinity: {}
  podAnnotations: {}
  deploymentAnnotations: {}

  proxy:
    # This allows to set a proxy environment variable, which Roundcube uses to fetch images, attachments, etc.
    enabled: false
    # http: "http://proxy:8080"
    # https: "https://proxy:8080"
    # noproxy: "localhost,127.0.0.1,10.96.0.0/12,10.244.0.0/12"

## Roundcube Database
## templates/database-deployment.yaml
##
database:
  component: database
  # nodeSelector:
  # cloud.google.com/gke-nodepool: default-pool

  podSecurityContext: {}
  # podSecurityContext:
  #   runAsUser: 568
  #   runAsGroup: 568
  #   fsGroup: 568

  port: 3306

  persistence:
    data:
      # We want to enable a data pvc
      enabled: true
      name: data
      mountPath: /var/lib/mysql
      size: 50Gi
      local_storage: false
      accessMode: ReadWriteOnce
      ## If you already have an existent storage class and want to reuse it, you can specify its name with the option below
      ##
      storageClass: ""

  probe:
    liveness:
      enabled: true
      failureThreshold: 5
      initialDelaySeconds: 30
      periodSeconds: 60
  affinity:
    anti_affinity: true
    # Set the anti affinity type. Valid values:
    # requiredDuringSchedulingIgnoredDuringExecution - rules must be met for pod to be scheduled (hard) requires at least one node per replica
    # preferredDuringSchedulingIgnoredDuringExecution - scheduler will try to enforce but not guranentee
    type: requiredDuringSchedulingIgnoredDuringExecution
  tolerations: []
  gracePeriod: 30
  # resources:
  #   requests:
  #     memory: 250Mi
  #     cpu: 0.2
  ## Database service
  ## templates/database-service.yaml
  ##
  service:
    annotations: {}
  deploymentAnnotations: {}
