{{- if .Values.components.database }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "roundcube.fullname" . }}-{{ .Values.database.component }}
  namespace: {{ template "roundcube.namespace" . }}
  labels:
    {{- include "roundcube.labels" . | nindent 4 }}
    component: {{ .Values.database.component }}
  {{- if .Values.database.deploymentAnnotations }}
  annotations:
    {{- range $key, $value := .Values.database.deploymentAnnotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: {{ .Values.strategyType }}
  selector:
    matchLabels:
      {{- include "roundcube.selectorLabels" . | nindent 6 }}
      component: {{ .Values.database.component }}
  template:
    metadata:
      labels:
        {{- include "roundcube.selectorLabels" . | nindent 8 }}
        component: {{ .Values.database.component }}
      {{- if .Values.database.podAnnotations }}
      annotations:
        {{- range $key, $value := .Values.database.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if .Values.hostNetwork }}
      hostNetwork: {{ .Values.hostNetwork }}
      dnsPolicy: ClusterFirstWithHostNet
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
    {{- if .Values.database.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.database.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.database.tolerations }}
      tolerations:
{{ toYaml .Values.database.tolerations | indent 8 }}
    {{- end }}
      terminationGracePeriodSeconds: {{ .Values.database.gracePeriod }}
      containers:
      - name: {{ template "roundcube.fullname" . }}-{{ .Values.roundcube.component }}
        securityContext:
          {{- toYaml .Values.database.podSecurityContext | nindent 12 }}
        image: "{{ .Values.images.database.repository }}:{{ .Values.images.database.tag }}"
        imagePullPolicy: {{ .Values.images.database.pullPolicy }}
        {{- if .Values.database.resources }}
        resources:
{{ toYaml .Values.database.resources | indent 10 }}
        {{- end }}
        ports:
        - name: server
          containerPort: {{ .Values.database.port }}
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "roundcube.fullname" . }}-{{ .Values.database.component }}-secret
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "roundcube.fullname" . }}-{{ .Values.database.component }}-secret
              key: MYSQL_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: {{ template "roundcube.fullname" . }}-{{ .Values.database.component }}-secret
              key: MYSQL_DATABASE
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: {{ template "roundcube.fullname" . }}-{{ .Values.database.component }}-secret
              key: MYSQL_USER
        # Extra ENV Values supplied by user
        {{- range $key, $value := .Values.database.extraEnv }}
        - name: {{ $key }}
          value: "{{ $value }}"
        {{- end }}
        {{- if .Values.database.probe.liveness.enabled }}
        livenessProbe:
          exec:
            command:
            - bash 
            - "-c" 
            - | 
              /usr/bin/mariadb --user=root --password=$MYSQL_ROOT_PASSWORD -h 127.0.0.1 -e 'SHOW DATABASES;'
          failureThreshold: {{ .Values.database.probe.liveness.failureThreshold }}
          initialDelaySeconds: {{ .Values.database.probe.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.database.probe.liveness.periodSeconds }}
        {{- end }}
        volumeMounts:
          - name: {{ template "roundcube.fullname" . }}-{{ .Values.database.component }}-{{ .Values.database.persistence.data.name }}
            mountPath: "{{ .Values.database.persistence.data.mountPath }}"
          {{- if .Values.database.extraConfig }}
          - name: custom-config
            subPath: custom.cnf
            mountPath: /etc/mysql/conf.d/custom.cnf
          {{- end }}
      volumes:
      {{- if .Values.database.extraConfig }}
      - name: custom-config
        configMap:
          name: {{ template "roundcube.fullname" . }}-{{ .Values.database.component }}-config
      {{- end }}
      {{- if not .Values.database.persistence.data.enabled }}
      - name: {{ template "roundcube.fullname" . }}-{{ .Values.database.component }}-{{ .Values.database.persistence.data.name }}
        emptyDir: {}
      {{- end }}
      {{- if .Values.database.persistence.data.enabled }}
      - name: {{ template "roundcube.fullname" . }}-{{ .Values.database.component }}-{{ .Values.database.persistence.data.name }}
        persistentVolumeClaim:
          claimName: {{ template "roundcube.fullname" . }}-{{ .Values.database.component }}-{{ .Values.database.persistence.data.name }}
      {{- end }}
{{- end }}
