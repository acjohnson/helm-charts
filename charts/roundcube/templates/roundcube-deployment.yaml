{{- if .Values.components.roundcube }}
{{- $fullName := include "roundcube.fullname" . -}}
{{- $dummy := set . "component" .Values.roundcube.component }}
{{- $component := .component -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "roundcube.fullname" . }}-{{ .Values.roundcube.component }}
  namespace: {{ template "roundcube.namespace" . }}
  labels:
    {{- include "roundcube.labels" . | nindent 4 }}
    component: {{ .Values.roundcube.component }}
  {{- if .Values.roundcube.deploymentAnnotations }}
  annotations:
    {{- range $key, $value := .Values.roundcube.deploymentAnnotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
spec:
  replicas: {{ .Values.roundcube.replicaCount }}
  revisionHistoryLimit: 3
  strategy:
    type: {{ .Values.strategyType }}
  selector:
    matchLabels:
      {{- include "roundcube.selectorLabels" . | nindent 6 }}
      component: {{ .Values.roundcube.component }}
  template:
    metadata:
      labels:
        {{- include "roundcube.selectorLabels" . | nindent 8 }}
        component: {{ .Values.roundcube.component }}
      {{- if .Values.roundcube.podAnnotations }}
      annotations:
        {{- if .Values.roundcube.restartPodsOnConfigMapChange }}
        checksum/config: {{ include (print $.Template.BasePath "/roundcube-configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- range $key, $value := .Values.roundcube.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if .Values.hostNetwork }}
      hostNetwork: {{ .Values.hostNetwork }}
      dnsPolicy: ClusterFirstWithHostNet
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
        - name: {{ template "roundcube.fullname" . }}-{{ .Values.roundcube.component }}
          securityContext:
            {{- toYaml .Values.roundcube.podSecurityContext | nindent 12 }}
          image: "{{ .Values.images.roundcube.repository }}:{{ .Values.images.roundcube.tag }}"
          imagePullPolicy: {{ .Values.images.roundcube.pullPolicy }}
          ports:
          - name: roundcube-http
            protocol: TCP
            containerPort: {{.Values.httpPort}}
          - name: roundcube-https
            protocol: TCP
            containerPort: {{.Values.httpsPort}}
          envFrom:
            - configMapRef:
                name: {{ template "roundcube.fullname" . }}-{{ .Values.roundcube.component }}-env
          env:
          - name: "ROUNDCUBEMAIL_DEFAULT_HOST"
            value: "{{ .Values.defaultHost }}"
          - name: "ROUNDCUBEMAIL_DEFAULT_PORT"
            value: "{{ .Values.defaultPort }}"
          - name: "ROUNDCUBEMAIL_SMTP_SERVER"
            value: "{{ .Values.smtpServer }}"
          - name: "ROUNDCUBEMAIL_SMTP_PORT"
            value: "{{ .Values.smtpPort }}"
          - name: "ROUNDCUBEMAIL_PLUGINS"
            value: "{{ .Values.plugins }}"
          - name: "ROUNDCUBEMAIL_SKIN"
            value: "{{ .Values.skin }}"
          - name: "ROUNDCUBEMAIL_UPLOAD_MAX_FILESIZE"
            value: "{{ .Values.uploadMaxFilesize }}"
          - name: "ROUNDCUBEMAIL_DES_KEY"
            value: "{{ .Values.desKey }}"
          - name: "ROUNDCUBEMAIL_SUPPORT_URL"
            value: "{{ .Values.supportUrl }}"
          - name: "ROUNDCUBEMAIL_PRODUCT_NAME"
            value: "{{ .Values.productName }}"
          - name: "ROUNDCUBEMAIL_ENABLE_INSTALLER"
            value: "{{ .Values.enableInstaller }}"
          - name: "ROUNDCUBEMAIL_ENABLE_SPELLCHECK"
            value: "{{ .Values.enableSpellcheck }}"
          - name: "ROUNDCUBEMAIL_SPELLCHECK_DICTIONARY"
            value: "{{ .Values.spellcheckDictionary }}"
          - name: "ROUNDCUBEMAIL_SPELLCHECK_ENGINE"
            value: "{{ .Values.spellcheckEngine }}"
          - name: "ROUNDCUBEMAIL_SPELLCHECK_URI"
            value: "{{ .Values.spellcheckUri }}"
          - name: "ROUNDCUBEMAIL_LOG_DRIVER"
            value: "{{ .Values.logDriver }}"
          - name: "ROUNDCUBEMAIL_USE_HTTPS"
            value: "{{ .Values.useHttps }}"
          - name: "ROUNDCUBEMAIL_FORCE_HTTPS"
            value: "{{ .Values.forceHttps }}"
          - name: "ROUNDCUBEMAIL_DB_TYPE"
            value: "{{ .Values.dbType }}"
  {{- if not (eq "sqlite" .Values.dbType) }}
          - name: "ROUNDCUBEMAIL_DB_HOST"
            value: {{ template "roundcube.fullname" . }}-{{ .Values.database.component }}
          - name: "ROUNDCUBEMAIL_DB_PORT"
            value: "{{ .Values.database.port }}"
          - name: "ROUNDCUBEMAIL_DB_USER"
            value: "{{ .Values.dbUsername }}"
          - name: "ROUNDCUBEMAIL_DB_PASSWORD"
            value: "{{ .Values.dbPassword }}"
  {{- end }}
          - name: "ROUNDCUBEMAIL_DB_NAME"
            value: "{{ .Values.dbName }}"
          - name: "HTTP_PORT"
            value: "{{ .Values.httpPort }}"
          - name: "HTTPS_PORT"
            value: "{{ .Values.httpsPort }}"
          - name: ROUNDCUBE_IMAGE
            value: "{{ .Values.images.roundcube.repository }}:{{ .Values.images.roundcube.tag }}"
          - name: KUBE_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
  {{- if .Values.roundcube.persistence.data.enabled }}
          - name: DATA_PVC
  {{- if .Values.roundcube.persistence.data.claimName }}
            value: "{{ .Values.roundcube.persistence.data.claimName }}"
  {{- else }}
            value: {{ template "roundcube.fullname" . }}-{{ .Values.roundcube.component }}-data
  {{- end }}
  {{- end }}
  {{- if .Values.roundcube.proxy.enabled }}
  {{- if .Values.roundcube.proxy.http }}
          - name: "HTTP_PROXY"
            value: "{{ .Values.roundcube.proxy.http }}"
  {{- end }}
  {{- if .Values.roundcube.proxy.https }}
          - name: "HTTPS_PROXY"
            value: "{{ .Values.roundcube.proxy.https }}"
  {{- end }}
  {{- if .Values.roundcube.proxy.noproxy }}
          - name: "NO_PROXY"
            value: "{{ .Values.roundcube.proxy.noproxy }}"
  {{- end }}
  {{- end }}
  {{- if .Values.publicHttpPort }}
          - name: "PUBLIC_HTTP_PORT"
            value: "{{ .Values.publicHttpPort }}"
  {{- end }}
  {{- if .Values.publicHttpsPort }}
          - name: "PUBLIC_HTTPS_PORT"
            value: "{{ .Values.publicHttpsPort }}"
  {{- end }}
# Extra ENV Values supplied by user
{{- range $key, $value := .Values.extraEnv }}
          - name: {{ $key }}
            value: "{{ $value }}"
{{- end }}
          {{- if .Values.roundcube.probes.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: /
              {{- if (eq "https" .Values.roundcube.service.defaultProtocol) }}
              port: {{ .Values.roundcube.service.ports.https }}
              scheme: HTTPS
              {{- else }}
              port: {{ .Values.roundcube.service.ports.http }}
              {{- end }}
            initialDelaySeconds: {{ .Values.roundcube.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.roundcube.probes.liveness.periodSeconds }}
            failureThreshold: {{ .Values.roundcube.probes.liveness.failureThreshold }}
          {{- end }}
          {{- if .Values.roundcube.probes.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: /
              {{- if (eq "https" .Values.roundcube.service.defaultProtocol) }}
              port: {{ .Values.roundcube.service.ports.https }}
              scheme: HTTPS
              {{- else }}
              port: {{ .Values.roundcube.service.ports.http }}
              {{- end }}
            initialDelaySeconds: {{ .Values.roundcube.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.roundcube.probes.readiness.periodSeconds }}
            failureThreshold: {{ .Values.roundcube.probes.readiness.failureThreshold }}
          {{- end }}
          {{- if .Values.roundcube.probes.startup.enabled }}
          startupProbe:
            httpGet:
              path: /
              {{- if (eq "https" .Values.roundcube.service.defaultProtocol) }}
              port: {{ .Values.roundcube.service.ports.https }}
              scheme: HTTPS
              {{- else }}
              port: {{ .Values.roundcube.service.ports.http }}
              {{- end }}
            initialDelaySeconds: {{ .Values.roundcube.probes.startup.initialDelaySeconds }}
            periodSeconds: {{ .Values.roundcube.probes.startup.periodSeconds }}
            failureThreshold: {{ .Values.roundcube.probes.startup.failureThreshold }}
          {{- end }}
          volumeMounts:
          {{- if .Values.roundcube.persistence.data.enabled }}
          - name: data
            mountPath: /data
          {{- if .Values.roundcube.persistence.data.subPath }}
            subPath: {{ .Values.roundcube.persistence.data.subPath }}
          {{- end }}
          {{- end }}
          {{-  range .Values.roundcube.persistence.extraMounts }}
          {{- if .mountPath }}
          - mountPath: {{ .mountPath }}
          {{- else }}
          - mountPath: /{{ .name }}
          {{- end }}
          {{- if .subPath }}
            subPath: {{ .subPath }}
          {{- end }}
            name: {{ .name }}
          {{- end }}
          {{- range .Values.roundcube.ingress.tls }}
          {{- if .secretName }}
          - name: {{ .secretName }}
            mountPath: /etc/apache2/ssl/certs/roundcube.crt
            subPath: tls.crt
          - name: {{ .secretName }}
            mountPath: /etc/apache2/ssl/private/roundcube.key
            subPath: tls.key
          - name: {{ $fullName }}-{{ $component }}-env
            mountPath: /var/www/html/.env
            subPath: env
          {{- end }}
          {{- end }}
          {{- if .Values.customConfigIncPhp }}
          - name: {{ $fullName }}-{{ $component }}-custom-config-inc-php
            mountPath: /var/roundcube/config/config.inc.php
            subPath: config.inc.php
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
##### VOLUMES START #####
      volumes:
      - name: {{ template "roundcube.fullname" . }}-{{ .Values.roundcube.component }}-env
        configMap:
          name: {{ template "roundcube.fullname" . }}-{{ .Values.roundcube.component }}-env
{{- range .Values.roundcube.ingress.tls }}
{{- if .secretName }}
      - name: {{ .secretName }}
        secret:
          secretName: {{ .secretName }}
{{- end }}
{{- end }}
{{- if .Values.customConfigIncPhp }}
      - name: {{ template "roundcube.fullname" . }}-{{ .Values.roundcube.component }}-custom-config-inc-php
        secret:
          secretName: {{ template "roundcube.fullname" . }}-{{ .Values.roundcube.component }}-custom-config-inc-php
{{- end }}
{{- if .Values.roundcube.persistence.data.enabled }}
      - name: data
        persistentVolumeClaim:
  {{- if .Values.roundcube.persistence.data.claimName }}
          claimName: "{{ .Values.roundcube.persistence.data.claimName }}"
  {{- else }}
          claimName: {{ template "roundcube.fullname" . }}-{{ .Values.roundcube.component }}-data
  {{- end }}
{{- end }}
{{- range .Values.roundcube.persistence.extraMounts }}
  {{- if .claimName }}
      - name: {{ .name }}
        persistentVolumeClaim:
          claimName: {{ .claimName }}
  {{- else if .volume }}
      - name: {{ .name }}
        {{- toYaml .volume | nindent 8 }}
  {{- end }}
{{- end }}
##### VOLUMES END #####
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
