{{- if .Values.components.osp_core }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ template "osp.fullname" . }}-{{ .Values.osp_core.component }}"
  namespace: {{ template "osp.namespace" . }}
  labels:
    {{- include "osp.standardLabels" . | nindent 4 }}
    component: {{ .Values.osp_core.component }}
spec:
  replicas: {{ .Values.osp_core.replicaCount }}
  selector:
    matchLabels:
      {{- include "osp.matchLabels" . | nindent 6 }}
      component: {{ .Values.osp_core.component }}
  template:
    metadata:
      labels:
        {{- include "osp.template.labels" . | nindent 8 }}
        component: {{ .Values.osp_core.component }}
      annotations:
        {{- if .Values.osp_core.restartPodsOnConfigMapChange }}
        checksum/config: {{ include (print $.Template.BasePath "/osp_core-configmap.yaml") . | sha256sum }}
        {{- end }}
{{ toYaml .Values.osp_core.annotations | indent 8 }}
    spec:
    {{- if .Values.osp_core.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.osp_core.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.osp_core.tolerations }}
      tolerations:
{{ toYaml .Values.osp_core.tolerations | indent 8 }}
    {{- end }}
      terminationGracePeriodSeconds: {{ .Values.osp_core.gracePeriod }}
      {{- if .Values.imagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecret }}
      {{- end }}
      containers:
      - name: "{{ template "osp.fullname" . }}-{{ .Values.osp_core.component }}"
        image: "{{ .Values.images.osp_core.repository }}:{{ .Values.images.osp_core.tag }}"
        imagePullPolicy: {{ .Values.images.osp_core.pullPolicy }}
        {{- if .Values.osp_core.probe.liveness.enabled }}
        livenessProbe:
          httpGet:
            path: /
            port: {{ .Values.osp_core.service.targetPort }}
          initialDelaySeconds: {{ .Values.osp_core.probe.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.osp_core.probe.liveness.periodSeconds }}
          failureThreshold: {{ .Values.osp_core.probe.liveness.failureThreshold }}
        {{- end }}
        {{- if .Values.osp_core.probe.readiness.enabled }}
        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.osp_core.service.targetPort }}
          initialDelaySeconds: {{ .Values.osp_core.probe.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.osp_core.probe.readiness.periodSeconds }}
          failureThreshold: {{ .Values.osp_core.probe.readiness.failureThreshold }}
        {{- end }}
        {{- if .Values.osp_core.probe.startup.enabled }}
        startupProbe:
          httpGet:
            path: /
            port: {{ .Values.osp_core.service.targetPort }}
          initialDelaySeconds: {{ .Values.osp_core.probe.startup.initialDelaySeconds }}
          periodSeconds: {{ .Values.osp_core.probe.startup.periodSeconds }}
          failureThreshold: {{ .Values.osp_core.probe.startup.failureThreshold }}
        {{- end }}
        {{- if .Values.osp_core.resources }}
        resources:
{{ toYaml .Values.osp_core.resources | indent 10 }}
        {{- end }}
        ports:
        - name: server
          containerPort: {{ .Values.osp_core.service.targetPort }}
        envFrom:
        - configMapRef:
            name: "{{ template "osp.fullname" . }}-{{ .Values.osp_core.component }}"
        env:
        - name: OSP_REDIS_HOST
          value: {{ template "osp.fullname" . }}-{{ .Values.osp_redis.component }}
        - name: OSP_REDIS_PORT
          value: "{{ .Values.osp_redis.port }}"
        - name: EJABBERDSERVER
          value: {{ template "osp.fullname" . }}-{{ .Values.osp_ejabberd.component }}
        - name: EJABBERDPASS
          valueFrom:
            secretKeyRef:
              name: "{{ template "osp.fullname" . }}-{{ .Values.osp_ejabberd.component }}-secret"
              key: EJABBERD_PASSWORD
        - name: OSP_DB_USER
          valueFrom:
            secretKeyRef:
              name: "{{ template "osp.fullname" . }}-{{ .Values.osp_db.component }}-secret"
              key: MYSQL_USER
        - name: OSP_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ template "osp.fullname" . }}-{{ .Values.osp_db.component }}-secret"
              key: MYSQL_PASSWORD
        - name: OSP_DB_NAME
          valueFrom:
            secretKeyRef:
              name: "{{ template "osp.fullname" . }}-{{ .Values.osp_db.component }}-secret"
              key: MYSQL_DATABASE
        - name: OSP_CORE_SECRETKEY
          valueFrom:
            secretKeyRef:
              name: "{{ template "osp.fullname" . }}-{{ .Values.osp_core.component }}-secret"
              key: OSP_CORE_SECRETKEY
        - name: OSP_CORE_PASSWORD_SALT
          valueFrom:
            secretKeyRef:
              name: "{{ template "osp.fullname" . }}-{{ .Values.osp_core.component }}-secret"
              key: OSP_CORE_PASSWORD_SALT
        - name: OSP_CORE_DB
          value: mysql+pymysql://$(OSP_DB_USER):$(OSP_DB_PASSWORD)@{{ template "osp.fullname" . }}-{{ .Values.osp_db.component }}:{{ .Values.osp_db.port }}/$(OSP_DB_NAME)
        volumeMounts:
        - name: "{{ template "osp.fullname" . }}-{{ .Values.osp_core.component }}-{{ .Values.osp_core.volumes.data.name }}"
          mountPath: /var/www
      volumes:
    {{- if not (and .Values.volumes.persistence .Values.osp_core.volumes.persistence) }}
      - name: "{{ template "osp.fullname" . }}-{{ .Values.osp_core.component }}-{{ .Values.osp_core.volumes.data.name }}"
        emptyDir: {}
    {{- end }}
    {{- if (and .Values.volumes.persistence .Values.osp_core.volumes.persistence) }}
      - name: "{{ template "osp.fullname" . }}-{{ .Values.osp_core.component }}-{{ .Values.osp_core.volumes.data.name }}"
        persistentVolumeClaim:
          claimName: "{{ template "osp.fullname" . }}-{{ .Values.osp_core.component }}-{{ .Values.osp_core.volumes.data.name }}"
    {{- end }}
{{- end }}
